/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package towerdefensegui;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.*;

import javax.imageio.ImageIO;

/**
 * @author TA
 */
public class MainMenu extends javax.swing.JPanel {

	BufferedImage backgroundImage;
	String imageBuffer = "/images/mainMenu.jpg";

	Information info;
	// Variables declaration - do not modify
	private javax.swing.JButton exitBut;
	private javax.swing.JButton highScoreBut;
	private javax.swing.JButton infoBut;
	private javax.swing.JButton loadBut;
	private javax.swing.JButton easyBut;
	private javax.swing.JButton mediumBut;
	private javax.swing.JButton hardBut;

	public MainMenu() {
		this.setPreferredSize(new Dimension(832, 776));
		try {
			backgroundImage = ImageIO.read(getClass().getResourceAsStream(imageBuffer));
		} catch (IOException exc) {
			exc.printStackTrace();
		}
		initComponents();
	}

	protected void paintComponent(Graphics g) {
		super.paintComponent(g);
		g.drawImage(backgroundImage, 0, 0, null);
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT
	 * modify this code. The content of this method is always regenerated by the Form Editor.
	 */

	private void initComponents() {

		loadBut = new javax.swing.JButton();
		easyBut = new javax.swing.JButton();
		mediumBut = new javax.swing.JButton();
		hardBut = new javax.swing.JButton();
		infoBut = new javax.swing.JButton();
		highScoreBut = new javax.swing.JButton();
		exitBut = new javax.swing.JButton();

		loadBut.setText("Load Game");
		loadBut.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				loadButActionPerformed(evt);
			}
		});

		easyBut.setText("Easy Mode");
		easyBut.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				playGameButActionPerformed(evt, 1);
			}
		});

		mediumBut.setText("Medium Mode");
		mediumBut.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				playGameButActionPerformed(evt, 2);
			}
		});

		hardBut.setText("Hard Mode");
		hardBut.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				playGameButActionPerformed(evt, 3);
			}
		});

		infoBut.setText("Information");
		infoBut.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				infoButActionPerformed(evt);
			}
		});

		highScoreBut.setText("High Score");
		highScoreBut.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				highScoreButActionPerformed(evt);
			}
		});

		exitBut.setText("Exit Game");
		exitBut.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				exitButActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(
			layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
					.addContainerGap(562, Short.MAX_VALUE)
					.addGroup(layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
						.addComponent(highScoreBut, javax.swing.GroupLayout.DEFAULT_SIZE, 224,
							Short.MAX_VALUE)
						.addComponent(infoBut, javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(hardBut, javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(mediumBut, javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(easyBut, javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(loadBut, javax.swing.GroupLayout.DEFAULT_SIZE,
							javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
					.addGap(46, 46, 46))
				.addGroup(layout.createSequentialGroup()
					.addGap(44, 44, 44)
					.addComponent(exitBut, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
						javax.swing.GroupLayout.PREFERRED_SIZE)
					.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addGap(172, 172, 172)
					.addComponent(loadBut, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
						javax.swing.GroupLayout.PREFERRED_SIZE)
					.addGap(18, 18, 18)
					.addComponent(easyBut, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
						javax.swing.GroupLayout.PREFERRED_SIZE)
					.addGap(18, 18, 18)
					.addComponent(mediumBut, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
						javax.swing.GroupLayout.PREFERRED_SIZE)
					.addGap(18, 18, 18)
					.addComponent(hardBut, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
						javax.swing.GroupLayout.PREFERRED_SIZE)
					.addGap(18, 18, 18)
					.addComponent(infoBut, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
						javax.swing.GroupLayout.PREFERRED_SIZE)
					.addGap(18, 18, 18)
					.addComponent(highScoreBut, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
						javax.swing.GroupLayout.PREFERRED_SIZE)
					.addGap(80, 80, 80)
					.addComponent(exitBut, javax.swing.GroupLayout.PREFERRED_SIZE, 33,
						javax.swing.GroupLayout.PREFERRED_SIZE)
					.addContainerGap(191, Short.MAX_VALUE))
		);
	}

	private void loadButActionPerformed(java.awt.event.ActionEvent evt) {
		try {
			FileInputStream fileStream = new FileInputStream("GameState.txt");
			ObjectInputStream objectStream = new ObjectInputStream(fileStream);

			GameStage.getInstance()
				.playGame(new GameField((GameManager) objectStream.readObject()));
		} catch (Exception e) {
			System.out.println("Can't load object");
		}
	}

	private void playGameButActionPerformed(java.awt.event.ActionEvent evt, int level) {
		GameStage.getInstance().playGame(new GameField(new GameManager(level)));
	}

	private void infoButActionPerformed(java.awt.event.ActionEvent evt) {
		GameStage.getInstance().showInstruct(new Information());
	}

	private void highScoreButActionPerformed(java.awt.event.ActionEvent evt) {
		GameStage.getInstance().showScore(new HighScore());
	}

	private void exitButActionPerformed(java.awt.event.ActionEvent evt) {
		System.exit(0);
	}
}